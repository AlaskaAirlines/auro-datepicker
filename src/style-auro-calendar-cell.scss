// // Copyright (c) 2022 Alaska Airlines. All right reserved. Licensed under the Apache-2.0 license
// // See LICENSE in the project root for license information.

// // ---------------------------------------------------------------------

@import './../node_modules/@aurodesignsystem/webcorestylesheets/src/breakpoints';
@import './../node_modules/@aurodesignsystem/design-tokens/dist/tokens/SCSSVariables';

/* stylelint-disable selector-max-class, color-function-notation, order/properties-order, declaration-empty-line-before, scss/selector-nest-combinators, selector-pseudo-element-colon-notation, max-nesting-depth, at-rule-empty-line-before */

@mixin in-range-pseudo-elem {
  position: absolute;
  z-index: -1;
  top: 50%;
  left: 50%;

  display: block;
  width: calc(100vw / 7);
  height: var(--ds-size-600, $ds-size-600);

  background-color: var(--ds-color-background-lighter, $ds-color-background-lighter);

  content: '';
  transform: translate(-50%, -50%);
}

:host {
  @include auro_breakpoint($max: $ds-grid-breakpoint-sm) {
    display: flex;
    justify-content: center;
  }
}

.day {
  position: relative;

  width: var(--ds-size-500, $ds-size-500);
  height: calc(var(--ds-size-700, $ds-size-700) - 2px);

  padding: 0;

  border-width: 1px;
  border-style: solid;
  border-color: transparent;
  border-radius: var(--ds-size-300, $ds-size-300);

  background-color: transparent;
  color: var(--ds-color-text-primary-default, $ds-color-text-primary-default);

  cursor: pointer;

  font-family: var(--ds-font-family-default, $ds-font-family-default);
  font-size: var(--ds-text-body-size-default, $ds-text-body-size-default);

  user-select: none;

  &.disabled {
    color: var(--ds-color-text-secondary-inverse, $ds-color-text-secondary-inverse);

    pointer-events: none;
  }

  &.selected {
    border-color: var(--ds-color-background-darker, $ds-color-background-darker);

    background-color: var(--ds-color-background-darker, $ds-color-background-darker);
    box-shadow: 0 .1px 5px rgba(0, 0, 0, .12), 0 5px 10px rgba(0, 0, 0, .1);
    color: var(--ds-color-background-lightest, $ds-color-background-lightest);

    &.rangeDepartDate::before {
      @include auro_breakpoint($max: $ds-grid-breakpoint-sm) {
        @include in-range-pseudo-elem;

        width: calc(calc(100vw / 7) / 2);

        transform: translate(0%, -50%);
      }
    }

    &.rangeReturnDate::before {
      @include auro_breakpoint($max: $ds-grid-breakpoint-sm) {
        @include in-range-pseudo-elem;

        width: calc(calc(100vw / 7) / 2);

        transform: translate(-100%, -50%);
      }
    }
  }

  &.inRange {
    &:before {
      @include in-range-pseudo-elem;

      @include auro_grid-breakpoint--sm {
        width: var(--ds-size-600, $ds-size-600);
      }
    }
  }
}

.daySlot {
  display: flex;
  flex-direction: column;

  font-size: var(--ds-text-body-size-xxs, $ds-text-body-size-xxs);
}

::slotted([slot^="date_"]) {
  color: var(--ds-color-text-link-default, $ds-color-text-link-default);

  position: absolute;
  top: 80%;
  left: 50%;

  width: 80%;

  overflow: hidden;
  white-space: nowrap;

  transform: translate(-50%, -50%);
}

:host([disabled]) ::slotted([slot^="date_"]) {
  color: var(--ds-color-text-disabled-default, $ds-color-text-disabled-default);
}

::slotted(auro-icon) {
  max-height: 24px;
  max-width: 24px;
}

:host([renderForDateSlot]) {
  .buttonWrapper {
    position: relative;
    width: 100%;
  
    top: 5px;
  }
  
  .currentDayMarker {
    position: relative;
    padding-bottom: 5px;
    top: -8px;
  }
}

@include auro_grid-breakpoint--sm {
  .day {
    width: var(--ds-size-600, $ds-size-600);
    height: var(--ds-size-800, $ds-size-800);

    font-size: var(--ds-text-body-size-lg, $ds-text-body-size-lg);
  }

  .daySlot {
    font-size: var(--ds-text-body-size-xs, $ds-text-body-size-xs);
  }
}

@media (hover: hover) {
  .day {
    &:hover {
      background-color: #f0f0f0; // var(--ds-color-ui-bkg-hover-default); - this token was part of the design but caused a problem with the `inRange` date styles so we had to switch to a solid color for hover.
      color: var(--ds-color-text-primary-default, $ds-color-text-primary-default);

      cursor: pointer;
    }

    &.selected {
      &:hover {
        background-color: var(--ds-color-background-lightest, $ds-color-background-lightest);
      }
    }
  }
}
